local Stack = require"lib.metarow.Stack"

describe( "basic functions", function ( )
  it( "creates instances with empty entry table", function( )
    local st = Stack( )
    assert.is_not_nil( st )
    assert.are.equals( 0, #st.__et )
    assert.are_true( st:empty( ) )
  end)

  it( "pushes an entry on the stack", function( )
    local st = Stack()
    st:push( 1 )
    assert.are_false( st:empty( ) )
    st:push( 2 )
    assert.are.equals( 2, st:number( ) )
  end)

  it( "pops an entry from stack", function( )
    local st = Stack()
    st:push( 1 )
    st:push( 2 )
    assert.are.equals( 2, st:pop( ) )
    assert.are.equals( 1, st:pop( ) )
    assert.is_nil( st:pop( ) )
  end)

  it( "pop a list from stack", function( )
    local st = Stack()
    st:push( 1 )
    st:push( 2 )
    local a, b = st:pop( 2 )
    assert.are.equals( 2, a )
    assert.are.equals( 1, b )
  end)
end)
